language: c

git:
  submodules: false

env:
  - E=precise_container TEST=distcheck
  - E=precise_container TEST=func-test

compiler:
  - gcc
  - clang

sudo: false
cache:
        directories:
          - $HOME/.local/bin
          - $HOME/.local/deps
          - $HOME/.local/gradle-2.9
          - $HOME/.local/include
          - $HOME/.local/lib
          - $HOME/.local/man
          - $HOME/.cache/pip
          - $HOME/.ccache
          - $HOME/.gradle/caches
          - .autoconf
          - autom4te.cache
before_cache:
        - rm -f $HOME/.cache/pip/log/debug.log
        - du -s $HOME/.cache/* $HOME/.ccache/* .autoconf autom4te.cache
        - ccache -s
        - ls -la $HOME $HOME/.[^.]* $HOME/..?*
        - find $HOME/.local
        - find $HOME/install
addons:
        apt:
          packages:
            - autoconf-archive
            - docbook-xsl
      #      - gradle # the one in 12.04 is buggy, one in 14.04 seems fine
            - libcap-dev
            - libesmtp-dev
            - libevtlog-dev
            - libgeoip-dev
            - libhiredis-dev
            - libjson0-dev
            - libnet1-dev
            - libprotobuf-c0-dev
#            - libsystemd-journal-dev # TODO: compile
#            - libsystemd-daemon-dev # TODO: compile
            - libwrap0-dev
            - protobuf-c-compiler
            - strace
            - xsltproc
install:
        - export SLNG_CACHE="$HOME/.local"
          export SLNG="$HOME/install/syslog-ng";
          export PATH="$SLNG_CACHE"/bin:$PATH;
          export PKG_CONFIG_PATH=$SLNG_CACHE/lib/pkgconfig:$SLNG/lib/pkgconfig:$PKG_CONFIG_PATH;
      #  - if [ "$CC" = "clang" ]; then export CCACHE_CPP2=yes; fi
        - echo "max_size = 150M" > ~/.ccache/ccache.conf
        - if [ "$CC" = "clang" ]; then
            printf "run_second_cpp = true\nprefix_command = -Qunused-arguments\n" >>
              ~/.ccache/ccache.conf;
          fi
          # if ! [ -f $HOME/.local/bin/clang ]; then ln -s `which ccache` $HOME/.local/bin/clang; fi
      #  - printf '#!/bin/sh\nCCACHE_CPP2=yes exec ccache clang "$@"\n' > $HOME/.local/bin/clang; chmod +x $HOME/.local/bin/clang
      #  - echo 'CCACHE_CPP2=yes exec ccache clang -Qunused-arguments `test -t 2 && echo -fcolor-diagnostics` "$@"' > $HOME/.local/bin/clang; chmod +x $HOME/.local/bin/clang
        - pip install --user -r requirements.txt
        - ./scripts/build-dbi.sh || exit $?
        - ./scripts/build-riemann-client.sh || exit $?
        - . scripts/get-gradle.sh || exit $?
        - find $HOME/.local
        - export GRADLE_OPTS="-Dorg.gradle.daemon=true -Dorg.gradle.logLevel=WARNING" # -Dorg.gradle.parallel=true
        - export GRADLE_CMDLINE="--no-color --stacktrace" # --quiet
after_script:
        - ccache -s

matrix:
  exclude:
    - env: E=precise_container TEST=distcheck
      compiler: clang
    - env: E=precise_container TEST=func-test
      compiler: gcc
  # DEBUG:
    - env: E=precise_container TEST=distcheck
      compiler: clang
      compiler: gcc
  #~ include:
    #~ - env: E=copyright_check
      #~ sudo: false
      #~ cache:
      #~ before_cache:
      #~ addons:
      #~ compiler: gcc
      #~ install:
      #~ script:
      #~ - export COPYRIGHTVERBOSITY=1;
        #~ tests/copyright/check.sh . .
      #~ after_script:
    #~ - env: E=trusty TEST=distcheck
      #~ dist: trusty
      #~ sudo: required
      #~ compiler: gcc
      #~ addons:
        #~ apt:
          #~ packages:
            #~ - curl
            #~ - ccache
            #~ - pkg-config
            #~ - flex
            #~ - bison
            #~ - xsltproc
            #~ - docbook-xsl
            #~ - libevtlog-dev
            #~ - libnet1-dev
            #~ - libglib2.0-dev
            #~ - libhiredis-dev
            #~ - libdbi-dev
            #~ - libssl-dev
            #~ - libjson0-dev
            #~ - libwrap0-dev
            #~ - libpcre3-dev
            #~ - libcap-dev
            #~ - libesmtp-dev
            #~ - libssl1.0.0
            #~ - libgeoip-dev
            #~ - sqlite3
            #~ - libdbd-sqlite3
#~ #            - libriemann-client-dev # TODO: compile
            #~ - libprotobuf-c0-dev
            #~ - openjdk-7-jdk
            #~ - gradle
            #~ - autoconf-archive
#~ #            - libsystemd-journal-dev # TODO: waiting for whitelisting
#~ #            - libsystemd-daemon-dev # TODO: waiting for whitelisting
      #~ install:
#~ #        - sudo sed -ri "s~^(deb(-src)?) http://us\.archive\.ubuntu\.com/ubuntu/( .*)$~\1 mirror://mirrors.ubuntu.com/mirrors.txt\3~" /etc/apt/sources.list
        #~ - cat /etc/apt/sources.list
        #~ - curl http://download.opensuse.org/repositories/home:/laszlo_budai:/syslog-ng/xUbuntu_12.04/Release.key | sudo apt-key add -
        #~ - echo "deb http://download.opensuse.org/repositories/home:/laszlo_budai:/syslog-ng/xUbuntu_12.04 ./" |
          #~ sudo tee --append /etc/apt/sources.list.d/syslog-ng-obs.list
        #~ - sudo apt-get update -qq
        #~ - sudo apt-get install --force-yes -qq
           #~ libdbi0-dev
           #~ libsystemd-journal-dev
           #~ libsystemd-daemon-dev
           #~ libriemann-client-dev
           #~ # gradle-2.2.1
        #~ - sudo pip install -r requirements.txt
    #~ # HACK
    #~ # --keep-going
        #~ # to make error messages more readable on error
#~ #        --disable-redis
script:
  - export PATH=/usr/lib/ccache:$PATH;
    ccache -z;
    ./autogen.sh || return $?;
    env;
    unset PYTHON_CFLAGS;
    if [ "$E" = "trusty" ]; then
      CONFIGURE_OPTS="
        --enable-systemd
        --with-systemd-journal=system";
    else
      CONFIGURE_OPTS="
        --disable-systemd
        --with-systemd-journal=optional
        --with-libhiredis=/usr
        --disable-riemann";
    fi;
    ./configure
      $CONFIGURE_OPTS
      CFLAGS=-Werror
      --with-ivykis=internal
      --with-mongoc=internal
      --with-librabbitmq=internal
      --with-jsonc=system
      --disable-env-wrapper
      --disable-memtrace
      --enable-tcp-wrapper
      --enable-linux-caps
      --disable-sun-streams
      --enable-pacct
      --enable-all-modules
      --enable-manpages
      --with-docbook-dir=/usr/share/xml/docbook/stylesheet/docbook-xsl/manpages/docbook.xsl
      --prefix="$SLNG" || return $?;
    if [ "$TEST" = "distcheck" ]; then
      make distcheck V=1;
    elif [ "$TEST" = "func-test" ]; then
      make install &&
      make func-test V=1 || exit $?;
    else
      true;
    fi
#      ./scripts/strace-func-test.sh || exit $?
branches:
  except:
    - /wip/
notifications:
  irc:
    channels:
      - "irc.freenode.org#balabit"
  webhooks:
      urls:
        - https://webhooks.gitter.im/e/1c6e3a6f10348748585a
      on_success: always  # options: [always|never|change] default: always
      on_failure: always  # options: [always|never|change] default: always
      on_start: true     # default: false
