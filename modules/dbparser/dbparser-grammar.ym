/*
 * Copyright (c) 2002-2013 Balabit
 * Copyright (c) 1998-2013 Bal√°zs Scheidler
 *
 * This program is free software; you can redistribute it and/or modify it
 * under the terms of the GNU General Public License version 2 as published
 * by the Free Software Foundation, or (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software
 * Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
 *
 * As an additional exemption you are allowed to compile & link against the
 * OpenSSL libraries as published by the OpenSSL project. See the file
 * COPYING for details.
 *
 */

%code top {
#include "dbparser-parser.h"

}


%code {

#include "dbparser.h"
#include "cfg-parser.h"
#include "dbparser-grammar.h"
#include "syslog-names.h"
#include "messages.h"
#include <string.h>
extern LogParser *last_parser;

}

%name-prefix "dbparser_"

/* this parameter is needed in order to instruct bison to use a complete
 * argument list for yylex/yyerror */

%lex-param {CfgLexer *lexer}
%parse-param {CfgLexer *lexer}
%parse-param {LogParser **instance}
%parse-param {gpointer arg}

/* INCLUDE_DECLS */

%token KW_DB_PARSER
%token KW_INJECT_MODE

%type <num> stateful_parser_inject_mode

%%

start
        : LL_CONTEXT_PARSER parser_expr_db                  { YYACCEPT; }
        ;

parser_expr_db
        : KW_DB_PARSER '('
          {
            last_parser = *instance = (LogParser *) log_db_parser_new(configuration);
          }
          parser_db_opts
          ')'
        ;

parser_db_opts
        : parser_db_opt parser_db_opts
        |
        ;

/* NOTE: we don't support parser_opt as we don't want the user to specify a template */
parser_db_opt
        : KW_FILE '(' string ')'                		{ log_db_parser_set_db_file(((LogDBParser *) last_parser), $3); free($3); }
	| stateful_parser_opt
        ;

stateful_parser_opt
	: KW_INJECT_MODE '(' stateful_parser_inject_mode ')'	{ stateful_parser_set_inject_mode(((StatefulParser *) last_parser), $3); }
	| parser_opt
	;

stateful_parser_inject_mode
	: string
	  {
            $$ = stateful_parser_lookup_inject_mode($1);
            CHECK_ERROR($$ != -1, @1, "Unknown inject-mode %s", $1);
            free($1);
          }
	| KW_INTERNAL				{ $$ = stateful_parser_lookup_inject_mode("internal"); }
	;

/* INCLUDE_RULES */

%%

